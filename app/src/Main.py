# Importing local libaries.
import sys
sys.path.append('src/App')
from catalogue import bespeak_product


import logging
# Primary statcs for the logging system.
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                     level=logging.DEBUG)


from telegram.ext import Updater, CommandHandler, CallbackContext, Defaults
import telegram
# Primary statics for the API system.
updater = Updater(token='5011357019:AAGVYQ3AdcfAgiscRWT7plSAHkHWRs3P36M', use_context=True)
dispatcher = updater.dispatcher


# General commands' functions.
def bespeak_catalogue(update: Updater, context: CallbackContext): # Beskeaps a catalogue for the current week.
    context.bot.send_message(chat_id=update.effective_chat.id, text=(bespeak_product("üßÉÔ∏è", "–°–æ–∫", "–ú–æ—è —Å–µ–º—å—è", 18, "–∏–∑ –≥—Ä—É—à, —á–µ—Ä–Ω–æ–ø–ª–æ–¥–Ω—ã—Ö —Ä—è–±–∏–Ω, —á—ë—Ä–Ω—ã—Ö —Å–º–æ—Ä–æ–¥–∏–Ω, –º–∞–ª–∏–Ω—ã –∏ –∫–ª—É–±–Ω–∏–∫–∏")), parse_mode=telegram.ParseMode.HTML)
    context.bot.send_message(chat_id=update.effective_chat.id, text=(bespeak_product("üç™Ô∏è", "–ü–µ—á–µ–Ω—å–∫–∞", "–Æ–±–∏–ª–µ–π–Ω–æ–µ", 5, "—Å –≥–ª–∞–∑—É—Ä—å—é –∏–∑ —Ç—ë–º–Ω–æ–≥–æ —à–æ–∫–æ–ª–∞–¥–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ")), parse_mode=telegram.ParseMode.HTML)


# 'Handling' commands, what makes them executable.
dispatcher.add_handler(CommandHandler('catalogue', bespeak_catalogue))

updater.start_polling()
